##############################################################################
## Provision rocketchat
## This role executes much of the needed functionality to provision an
## application using an Ansible Playbook Bundle.  Included in the comments
## below are some sample resources for getting started deploying an application
## to OpenShift.
##############################################################################

- name: create rocketchat route
  openshift_v1_route:
    name: rocketchat
    namespace: '{{ namespace }}'
    spec_port_target_port: rocketchat-3000
    labels:
      app: rocketchat
      service: rocketchat
    to_name: rocketchat
  register: route

- name: create persistent volume claim for mongo
  k8s_v1_persistent_volume_claim:
    name: mongo-storage
    namespace: '{{ namespace }}'
    state: present
    access_modes:
      - ReadWriteOnce
    resources_requests:
      storage: 1Gi

- name: create deployment config
  openshift_v1_deployment_config:
    name: rocketchat
    namespace: '{{ namespace }}'
    labels:
      app: rocketchat
      service: rocketchat
    replicas: 1
    selector:
      app: rocketchat
      service: rocketchat
    spec_template_metadata_labels:
      app: rocketchat
      service: rocketchat
    containers:
    - env:
      - name: ROOT_URL
        value: "http://{{ route.route.spec.host }}"
      - name: MONGO_URL
        value: "mongodb://0.0.0.0:27017/{{ mongodb_name }}"
      image: rocket.chat:{{ rocketchat_version }}
      name: rocketchat
      ports:
      - container_port: 3000
        name: rocketchat-3000
        protocol: TCP
    - env:
      - name: MONGODB_USER
        value: "{{ mongodb_user }}"
      - name: MONGODB_PASSWORD
        value: "{{ mongodb_pass }}"
      - name: MONGODB_DATABASE
        value: "{{ mongodb_name }}"
      - name: MONGODB_ADMIN_PASSWORD
        value: "{{ mongodb_admin_pass }}"
      image: mongo:{{ mongodb_version }}
      volume_mounts:
      - mount_path: /data/db
        name: mongo-storage
      name: db
      ports:
      - container_port: 27017
        protocol: TCP
        name: mongo-27017
    volumes:
    - name: mongo-storage
      persistent_volume_claim:
        claim_name: mongo-storage

- name: create rocketchat service
  k8s_v1_service:
    name: rocketchat
    namespace: '{{ namespace }}'
    labels:
      app: rocketchat
      service: rocketchat
    selector:
      app: rocketchat
      service: rocketchat
    ports:
      - name: rocketchat-3000
        port: 3000
        target_port: 3000

- name: create mongo service
  k8s_v1_service:
    name: db
    namespace: '{{ namespace }}'
    labels:
      app: rocketchat
      service: db
    selector:
      app: rocketchat
      service: db
    ports:
      - name: mongo-27017
        port: 27017
        target_port: 27017
